# -*- coding: utf-8 -*-
"""functions for visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X3DVo2N1zGn7GeuQCFniK1XXL65atPYt
"""

# Commented out IPython magic to ensure Python compatibility.
# Functions for Visualization 1.0
# Author: Yuchen Zhou
# The script contains all functions for visualizing the results of topic modeling

import  pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""**1. Visualizing Frequency of Topics**

show_topic(number,mydataframe,topicdict)

This function will read the Pandas dataframe that contains the frequency of topics and output a graph that shows the frequency of one specific topic overtime. The function will also output the words that constitute the topic.

**Parameter**(number): A specific topic number

**Parameter**(mydataframe): The dataframe that contains frequency of topics

**Parameter**(topic_dict): The dictionary that contains words that constitute each topic
"""

def show_topic(number,mydataframe,topic_dict):

      row=mydataframe.loc[mydataframe['Unnamed: 0'] == number] # get the row that contains the topic
      print("topic contains:")

      for word in topic_dict[number]: # output the words that constitute the topic
        print(word[0])

      row=row.drop(["Unnamed: 0"],axis="columns")
      fig, ax = plt.subplots(figsize=(24,10))
      sns.barplot(data=row, ax=ax,color='steelblue'); # draw the plot that shows the frequency of topic overtime
      plt.xlabel("Time")
      plt.ylabel("Frequency of Topic (%)")
      plt.show()

"""**2. Plotting and Quantifying the correlation between topics**

show_topic_correlation(topic_one,topic_two,mydataframe)

This function will read the Pandas dataframe that contains the frequency of topics and output a scatter plot. The scatter plot will have frequency of one topic versus the frequency of another topic. This function will also output the Pearsons correlation of the two frequencies.

**Parameter**(topic_one): A specific topic number

**Parameter**(topic_two):Another topic number

**Parameter**(mydataframe): The Pandas dataframe that contains frequency of topics
"""

def show_topic_correlation(topic_one,topic_two,mydataframe):

      data1=mydataframe.loc[mydataframe['Unnamed: 0'] == topic_one] # get the frequency of topic_one
      data2=mydataframe.loc[mydataframe['Unnamed: 0'] == topic_two] #get the frequency of topic_two

      data1=data1.drop(["Unnamed: 0"],axis="columns")
      data2=data2.drop(["Unnamed: 0"],axis="columns")
      data1=data1.to_numpy()
      data2=data2.to_numpy()

      pearson = np.corrcoef(data1,data2)[0][1] # get the Pearsons correlation
      plt.scatter(data1, data2)
      plt.show() # plot the scatter plot
      print('Pearsons correlation: %.3f' % pearson)